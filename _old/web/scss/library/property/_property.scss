/* ---------------
 * temp hacks
 * --------------- */

@mixin clearfix {
    &:before, &:after {
        content: "";
        display: block;
        overflow: hidden;
    }
    &:after {
        clear:both;
    }
    *zoom: 1;
}

/* ---------------
 * fonts
 * --------------- */
@mixin font-family($type: default, $important: false) {
    @if $important == 'important' or $important == true {
        $important: ' !important';
    } @else {
        $important: '';
    }
    @if $type == default {
        font-family: "ヒラギノ角ゴ Pro W3", "Hiragino Kaku Gothic Pro", "メイリオ", Meiryo, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;

    } @else if $type == windows {
        font-family:  "メイリオ", Meiryo, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;//default for windows

    } @else if $type == mac {
        font-family: "ヒラギノ角ゴ Pro W3", "Hiragino Kaku Gothic Pro", sans-serif;//default for mac

    } @else if $type == sans-serif {
        font-family: sans-serif#{$important};

    } @else if $type == serif {
        font-family: serif#{$important};

    } @else if $type == monospace {
        font-family: monospace#{$important};

    } @else if $type == verdana {
        font-family: Verdana, Arial, Helvetica, sans-serif#{$important};

    } @else if $type == tahoma {
        font-family: Tahoma, Arial, Helvetica, sans-serif#{$important};
    }
}

@mixin base-font-size($px) {
    font-size: $px + px;
}

@mixin font-size($size) {
    font-size: $size + px;
}

/* ---------------
 * display (css3)
 * --------------- */
@mixin inline-block {
    display: inline-block;
    *display: inline;
    *zoom: 1;
}

@mixin table-cell {
    display: table-cell;
    *display: inline;
    *zoom: 1;
}

@mixin border-box {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
}

/* ---------------
 * property (css3)
 * --------------- */
// property duration timing delayの順で指定
@mixin transition($val...) {
    -webkit-transition: $val;
    -moz-transition: $val;
    -ms-transition: $val;
    -o-transition: $val;
    transition: $val;
}

@mixin transform($val...) {
    -webkit-transform: $val;
    -moz-transform: $val;
    -ms-transform: $val;
    -o-transform: $val;
    transform: $val;
}

@mixin transform-origin($val...) {
    -webkit-transform-origin: $val;
    -moz-transform-origin: $val;
    -ms-transform-origin: $val;
    -o-transform-origin: $val;
    transform-origin: $val;
}

@mixin perspective($val...) {
    -webkit-perspective: $val;
    -moz-perspective: $val;
    -ms-perspective: $val;
    -o-perspective: $val;
    perspective: $val;
}

@mixin perspective-origin($origin...) {
    -webkit-perspective-origin: $origin;
    -moz-perspective-origin: $origin;
    -ms-perspective-origin: $origin;
    -o-perspective-origin: $origin;
    perspective-origin: $origin;
}

@mixin backface-visibility($val...) {
    -webkit-backface-visibility: $val;
    -moz-backface-visibility: $val;
    -ms-backface-visibility: $val;
    -o-backface-visibility: $val;
    backface-visibility: $val;
}

// inset x y blur width colorの順で指定
@mixin box-shadow($val...) {
    -webkit-box-shadow: $val;
    -moz-box-shadow: $val;
    box-shadow: $val;
}

@mixin text-shadow($val...) {
    text-shadow: $val;
}

@mixin user-select {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

// 面倒なので方向は無視
// 必要そうならhttp://myakura.hatenablog.com/entry/2013/03/04/001147
// $stopcolorを好きなだけ指定して良い
@mixin linear-gradient($startcolor, $stopcolor...) {
    background: $startcolor;
    background: -webkit-linear-gradient(top, $startcolor, $stopcolor);
    background: -moz-linear-gradient(top, $startcolor, $stopcolor);
    background: -o-linear-gradient(top, $startcolor, $stopcolor);
    background: linear-gradient(to bottom, $startcolor, $stopcolor);
}


//colorは16進数
@mixin rgba($color, $alpha) {
    $rgba: rgba($color, $alpha);
    $ie-hex-str: ie-hex-str($rgba);
    background: $color;
    background: $rgba;
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
    zoom: 1;
}

@mixin opacity($val) {
    filter: alpha(opacity=($val * 100));//for IE6&7
    -ms-filter: "alpha(opacity=($val * 100))";//for IE8
    -moz-opacity: $val;
    opacity: $val;
}

@mixin border-radius($val) {
    //for old-IE
    border-radius: $val;
    -webkit-border-radius: $val;
    -moz-border-radius: $val;
}

@mixin general-button($label-size, $icon-size, $label-color, $popup-dist, $margin-height, $margin-width, $radius, $speed, $button-color) {

    $transition-instant: all 0ms;
    $transition-hover: all $speed;

    @include inline-block;
    @include user-select;
    @include transition($transition-instant);
    @include border-radius($radius);
    position: relative;
    top: 0px;
    background-color: rgba($button-color, 1 );
    text-decoration: none !important;
    padding: $margin-height $margin-width;
    line-height: if($label-size < $icon-size, $icon-size, $label-size);

    .button-content {
        @include transition($transition-instant);
        @include border-radius(0 0 $radius $radius);
        display: table;
        *display: block;
        box-shadow: 0px 0px 0px 0px rgba(darken($button-color, 15%), 0);
        .button-text {
            display: table-cell;
            vertical-align: middle;
            text-decoration: none;
            white-space: nowrap;
            font-size: $label-size;
            color: $label-color;
        }
        .button-image {
            display: table-cell;
            vertical-align: middle;
            border-right: $margin-width solid transparent;
            img {
                vertical-align: middle;
            }
        }
        .icon-font {
            font-size: $icon-size;
        }
    }
    &:before {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        border-radius: $radius;
        border-bottom: 0px solid rgba(darken($button-color, 10%), 0);
        background-color: rgba($button-color, 0);
    }
    &:hover {
        text-decoration: none;
        @include transition($transition-hover);
        background-color: rgba(lighten($button-color, 3% ), 1);
        top: -$popup-dist;
        box-shadow: 0px $popup-dist 0px 0px rgba(darken($button-color, 15%), 1);
        .button-content {
            @include transition($transition-hover);
        }
        &:before {
            @include transition($transition-hover);
            border-bottom: $popup-dist solid rgba(darken($button-color, 10%), 0);
        }
    }
    &:active {
        @include transition($transition-instant);
        top: 0px;
        background-color: rgba(darken($button-color, 5%), 1);
        box-shadow: 0px ($popup-dist / 5 + 2) 0px 0px rgba(darken($button-color, 15%), 1) inset;
        .button-content {
            @include transition($transition-instant);
            box-shadow: 0px 0px 0px 0px rgba(darken($button-color, 15% ), 0);
        }
        &:before {
            @include transition($transition-instant);
            top: -$popup-dist;
            border-bottom: 0px solid rgba(darken($button-color, 10%), 0);
            padding-bottom: $popup-dist;
        }
    }
}

@mixin flex-direction($val) {
  -webkit-flex-direction: $val;
  -moz-flex-direction: $val;
  -ms-flex-direction: $val;
  -o-flex-direction: $val;
  flex-direction: $val;
}

@mixin flex-wrap($val) {
  -webkit-flex-wrap: $val;
  -moz-flex-wrap: $val;
  -ms-flex-wrap: $val;
  -o-flex-wrap: $val;
  flex-wrap: $val;
}

@mixin flex-flow($val) {
  -webkit-flex-flow: $val;
  -moz-flex-flow: $val;
  -ms-flex-flow: $val;
  -o-flex-flow: $val;
  flex-flow: $val;
}

@mixin justify-content($val) {
  -webkit-justify-content: $val;
  -moz-justify-content: $val;
  -ms-justify-content: $val;
  -o-justify-content: $val;
  justify-content: $val;
}

@mixin align-items($val) {
  -webkit-align-items: $val;
  -moz-align-items: $val;
  -ms-align-items: $val;
  -o-align-items: $val;
  align-items: $val;
}

@mixin align-content($val) {
  -webkit-align-content: $val;
  -moz-align-content: $val;
  -ms-align-content: $val;
  -o-align-content: $val;
  align-content: $val;
}

@mixin order($val) {
  -webkit-order: $val;
  -moz-order: $val;
  -ms-order: $val;
  -o-order: $val;
  order: $val;
}

@mixin flex-grow($val) {
  -webkit-flex-grow: $val;
  -moz-flex-grow: $val;
  -ms-flex-grow: $val;
  -o-flex-grow: $val;
  flex-grow: $val;
}

@mixin flex-shrink($val) {
  -webkit-flex-shrink: $val;
  -moz-flex-shrink: $val;
  -ms-flex-shrink: $val;
  -o-flex-shrink: $val;
  flex-shrink: $val;
}

@mixin align-self($val) {
  -webkit-align-self: $val;
  -moz-align-self: $val;
  -ms-align-self: $val;
  -o-align-self: $val;
  align-self: $val;
}

@mixin appearance($val: none) {
  -webkit-appearance: $val;
  -moz-appearance: $val;
  -ms-appearance: $val;
  -o-appearance: $val;
  appearance: $val;
}

